/**   
analyseExcuteService * @Title: KettleSpringFactory.java  
 * @Description: TODO 
 * @author zps   
 * @date 2015骞�鏈�9鏃�涓嬪崍2:32:46
 * @Copyright Henan Province Jinghua Sci & Tech Co.. Ltd
 * @version V1.0   
 */
package com.gilight.dep.metadata.spring;

import com.gilight.dep.framework.core.context.base.ContextFactoryImpl;
import com.gilight.dep.framework.core.context.base.IContext;
import com.gilight.dep.framework.core.exception.GilightException;
import com.gilight.dep.metadata.entity.MmFolder;
import com.gilight.dep.metadata.entity.MmMapData;
import com.gilight.dep.metadata.util.AutoCopyObj;
import com.gilight.dep.metadata.view.MetaModelDataMapView;
import com.gilight.dep.metadata.view.MetaModelFolderView;
import com.gilight.dep.metamodel.service.impl.MetaModelDataMapServiceImpl;
import com.gilight.dep.metamodel.service.impl.MetaModelFolderServiceImpl;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class SpringFactoryModelDataMapTest {

	private static SpringFactoryModelDataMapTest instance = new SpringFactoryModelDataMapTest();
	private static ApplicationContext factory;

	public static SpringFactoryModelDataMapTest getInstance() {
		return instance;
	}

	static {
		//String[] beans={"beans/service/beans.xml","beans/hibernate/hibernate.xml"};
		factory = new ClassPathXmlApplicationContext("test.xml");
	}

	public static Object getBean(String name) {
		if (factory == null) {
			return null;
		}
		try {
			return factory.getBean(name);
		} catch (Exception e) {
			return null;
		}
	}

	public static ApplicationContext getFactory() {
		return factory;
	}

	public static void setFactory(ApplicationContext factory) {
		SpringFactoryModelDataMapTest.factory = factory;
	}

	public static void main(String[] args) {
		try {
			System.out.println("Test------");
			
			//ExcelGatherJobTaskModel jobmodel = new ExcelGatherJobTaskModel();
			MetaModelDataMapServiceImpl gs = (MetaModelDataMapServiceImpl) SpringFactoryModelDataMapTest.getBean("metaModelDataMapService");
			System.out.println("Test------");
			MetaModelDataMapView view = new MetaModelDataMapView();
			MmMapData mf = new MmMapData();
			mf=AutoCopyObj.objCopy(MmMapData.class,view);
			view.setId("aaa");
			view.setMapdata("8888888888888888888");
			IContext context=ContextFactoryImpl.getInstance().createContextWithView(view);
			//IContext delcontext=ContextFactoryImpl.getInstance().createDifferResponseContextWithID(view.getId());
			IContext delcontext=ContextFactoryImpl.getInstance().createContextWithID(view.getId());
			//IContext context=ContextFactoryImpl.getInstance().createContextWithEntity(mf);
			//gs.create(context);
			gs.delete(context);
			//gs.update(context);
			System.out.println("Test------");
		} catch (GilightException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}

		// System.out.println(s.findAll()==null);
	}

}
