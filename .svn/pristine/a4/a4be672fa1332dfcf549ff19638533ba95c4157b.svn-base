package com.gilight.dep.metadata.repository.impl;

import java.util.List;

import com.gilight.dep.framework.core.context.base.IContext;
import com.gilight.dep.framework.core.context.request.parameter.IParameters;
import com.gilight.dep.framework.core.context.request.parameter.impl.EntityParameters;
import com.gilight.dep.framework.core.context.request.parameter.impl.IDParameters;
import com.gilight.dep.framework.core.context.response.IResponse;
import com.gilight.dep.framework.core.context.response.result.IResult;
import com.gilight.dep.framework.core.context.response.result.factory.ResultFactory;
import com.gilight.dep.framework.core.context.support.IResultHandler;
import com.gilight.dep.framework.core.exception.DaoException;
import com.gilight.dep.framework.core.exception.RepositoryException;
import com.gilight.dep.framework.core.model.entity.IDEntity;
import com.gilight.dep.framework.core.model.entity.IEntity;
import com.gilight.dep.framework.core.service.parameter.ServiceParameter;
import com.gilight.dep.metadata.dao.IMetaModelBasicDao;
import com.gilight.dep.metadata.entity.MmMetamodel;
import com.gilight.dep.metadata.repository.IMetaModelBasicRepository;

public class MetaModelBasicRepositoryImpl implements IMetaModelBasicRepository {
	
	private IMetaModelBasicDao metaModelBasicDao;
	
	
	
	public IMetaModelBasicDao getMetaModelBasicDao() {
		return metaModelBasicDao;
	}

	public void setMetaModelBasicDao(IMetaModelBasicDao metaModelBasicDao) {
		this.metaModelBasicDao = metaModelBasicDao;
	}



	@Override
	public IResponse create(IContext paramIContext) throws RepositoryException {
		try {
		// TODO Auto-generated method stub
		//paramIContext.getRequest()create(paramIContext)
			EntityParameters<IEntity> entityParameters = (EntityParameters) paramIContext.getParameters();
			IEntity mme=(IEntity)entityParameters.getEntity();
		//metaModelBasicDao.save(paramIEntity);
		
			metaModelBasicDao.save(mme);
		} catch (DaoException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			new RepositoryException("创建元模型失败!-dao");
		}
		
		return paramIContext.getResponse();
	}

	@Override
	public IResponse update(IContext paramIContext) throws RepositoryException {
		try {
			// TODO Auto-generated method stub
			EntityParameters<IEntity> entityParameters = (EntityParameters) paramIContext.getParameters();
			IEntity mme=(IEntity)entityParameters.getEntity();
			//metaModelBasicDao.save(paramIEntity);
		
			metaModelBasicDao.update(mme);
			paramIContext.getResponse().setResult(ResultFactory.getInstance().createSuccessResult(null));
		} catch (DaoException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			new RepositoryException("更新元模型失败!-dao");
		}
		
		return paramIContext.getResponse();
	}

	@Override
	public IResponse delete(IContext paramIContext) throws RepositoryException {
		try {
		// TODO Auto-generated method stub
			EntityParameters<IEntity> entityParameters = (EntityParameters) paramIContext.getParameters();
			IEntity mme=(IEntity)entityParameters.getEntity();
		//metaModelBasicDao.save(paramIEntity);
		
			metaModelBasicDao.delete(mme);
		} catch (DaoException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			new RepositoryException("删除元模型失败!-dao");
		}
		
		return paramIContext.getResponse();
	}


	@SuppressWarnings("unchecked")
	@Override
	public IResponse getById(IContext paramIContext) throws RepositoryException {
		// TODO Auto-generated method stub
		try {
			IDParameters idp = (IDParameters) paramIContext.getParameters();
			//EntityParameters mme=(MmMetamodel)entityParameters.getEntity();
			String id = idp.getId();
			//metaModelBasicDao.getById(mme.getId(),MmMetamodel.class);
			MmMetamodel mme=(MmMetamodel) metaModelBasicDao.findById(id,MmMetamodel.class);
			paramIContext.getResponse().setResult(ResultFactory.getInstance().createSuccessResult(mme));
			
		} catch (DaoException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			new RepositoryException("查询元模型失败!-dao");
		}
		
		return paramIContext.getResponse();
		//return null;
	}

	@Override
	public IResponse getByScope(IContext paramIContext)
			throws RepositoryException {
		// TODO Auto-generated method stub
		return null;
	}

}
