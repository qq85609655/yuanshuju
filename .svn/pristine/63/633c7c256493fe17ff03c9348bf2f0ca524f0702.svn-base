package com.gilight.dep.metadata.util;

import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.Map;

public class AutoSetCode {

	// private

	static public <T> Field[] autosetCode(Class<T> ctype, String objstr) {

		Field[] fs = ctype.getDeclaredFields();
		// Field[] fs = ctype.getDeclaredFields();
		/*
		 * for ( int i = 0 ; i < fs. length ; i++){ Field f = fs[i];
		 * f.setAccessible( true ); // 设置些属性是可以访问的 String
		 * fname=f.getName().substring
		 * (0,1).toUpperCase()+f.getName().substring(1); System.out.println(
		 * objstr+".set" +fname+"()"); }
		 */
		return fs;
	}

	static public <T> Field[] autogetCode(Class<T> ctype, String objstr) {

		Field[] fs = ctype.getDeclaredFields();
		// ctype.getField(name)
		return fs;
	}

	static public <T> Method[] autoModCode(Class<T> ctype, String objstr) {

		Method[] ms = ctype.getDeclaredMethods();

		// /ms[1].getn
		// ctype.getField(name)
		return ms;
	}

	static public <T, P> void autoCode(Class<T> ctype, String objstr,
			Class<P> ptype, String pobjstr) {
		Map<String, String> tmap = new HashMap<String, String>();
		Field[] fs = autogetCode(ctype, objstr);
		Field[] ts = autogetCode(ptype, pobjstr);
		for (int i = 0; i < ts.length; i++) {
			Field f = ts[i];
			String tname = f.getName().substring(0, 1).toUpperCase()
					+ f.getName().substring(1);
			String pname = f.getName();
			String ftype = f.getType().toString();
			// AutoFieldTypeMapp.AutoTypeMapp(val);
			if (ftype.equals("boolean")) {
				tmap.put(pname, "AutoFieldTypeMapp.autoTypeMapp(" + pobjstr
						+ ".is" + tname + "())");
			} else if (ftype.equals("Integer") || ftype.equals("int")) {
				tmap.put(pname, "AutoFieldTypeMapp.autoTypeMapp(" + pobjstr
						+ ".get" + tname + "())");
			} else {
				tmap.put(pname, pobjstr + ".get" + tname + "()");
			}
			// System.out.println( pname);
		}
		for (int i = 0; i < fs.length; i++) {
			Field f = fs[i];
			f.setAccessible(true); // 设置些属性是可以访问的
			String fname = f.getName().substring(0, 1).toUpperCase()
					+ f.getName().substring(1);
			if (null == tmap.get(f.getName())) {
				System.out.println(objstr + ".set" + fname + "();");
			} else {
				System.out.println(objstr + ".set" + fname + "("
						+ tmap.get(f.getName()) + ");");
			}

		}

	}

}
