package com.gilight.dep.metadata.gather.common.util;

import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;





import com.gilight.dep.metadata.enums.ImpModelCode;
import com.gilight.dep.metadata.view.ColumnView;

public class DBGatherUtils {

	public DBGatherUtils() {
		// TODO Auto-generated constructor stub
	}
	/**
	 * 获取Schema名列表
	* <p><br>
	* @param databaseMetaData
	* @return
	* @throws SQLException  
	* @author wzx
	* @date 2015年8月14日 上午10:48:16
	* @version V1.0
	 */
	public static List<String> getSchemaNames(DatabaseMetaData databaseMetaData) throws SQLException{
		List<String> list = new ArrayList<String>();
		ResultSet rs = databaseMetaData.getSchemas();
		
		while(rs.next()) {
			String name=rs.getString(1);
			list.add(name);
			//md.setMmcode(mmcode);
			//rs.getString(1);
		}
		return list;
	} 
	
	/**
	 * 根据schemaname查所有表名称
	* <p><br>
	* @param databaseMetaData
	* @param schemaname
	* @return
	* @throws SQLException  
	* @author wzx
	* @date 2015年8月14日 上午10:50:04
	* @version V1.0
	 */
	public static List<String> getTableNames(DatabaseMetaData databaseMetaData,String schemaname) throws SQLException{
		String[] types={"TABLE"};
		List<String> list = getTableNames(databaseMetaData,schemaname,types);
		return list;
	} 
	
	
	/**
	 * 根据schemaname查所有表名称
	* <p><br>
	* @param databaseMetaData
	* @param schemaname
	* @return
	* @throws SQLException  
	* @author wzx
	* @date 2015年8月14日 上午10:50:04
	* @version V1.0
	 */
	public static List<String> getTableNames(DatabaseMetaData databaseMetaData,String schemaname,String[] types) throws SQLException{
		//String[] types={"TABLE"};
		List<String> list = new ArrayList<String>();
		ResultSet rs = databaseMetaData.getTables(null, schemaname, null, types);
		
		while(rs.next()) {
			String name=rs.getString("TABLE_NAME");
			list.add(name);
			//md.setMmcode(mmcode);
			//rs.getString(1);
		}
		rs.close();
		return list;
	} 
	/**
	 * 查询视图
	* <p><br>
	* @param databaseMetaData
	* @param schemaname
	* @return
	* @throws SQLException  
	* @author wzx
	* @date 2015年8月14日 上午10:53:44
	* @version V1.0
	 */
	public static List<String> getViewNames(DatabaseMetaData databaseMetaData,String schemaname) throws SQLException{
		String[] types={"VIEW"};
		List<String> list = getTableNames(databaseMetaData,schemaname,types);
		return list;
	} 
	/**
	 * 获取列信息
	* <p><br>
	* @param databaseMetaData
	* @param schemaname
	* @return
	* @throws SQLException  
	* @author wzx
	* @date 2015年8月14日 上午10:58:51
	* @version V1.0
	 */
	public static synchronized Map<String,ColumnView> getColumns(DatabaseMetaData databaseMetaData,String schemaname,String tablename) throws SQLException{
		//String[] types={"VIEW"};
		
		ResultSet rs =databaseMetaData.getColumns(null, schemaname, tablename, null);
		Map<String,ColumnView> map = new HashMap<String,ColumnView>();
		while(rs.next()) {
			String name=rs.getString("COLUMN_NAME");
			String typename=rs.getString("TYPE_NAME");
			String size=rs.getString("COLUMN_SIZE"); //列大小
			String digits=rs.getString("DECIMAL_DIGITS"); //小数位长度
			String isnull=rs.getString("NULLABLE"); //是否可以为null
			String remark=rs.getString("REMARKS");//备注	
			ColumnView cv = new ColumnView();
			cv.setName(name);
			cv.setTypename(typename);
			cv.setSize(size);
			cv.setDigits(digits);
			cv.setIsnull(isnull);
			cv.setRemark(remark);
			
			map.put(name, cv);
		}
		rs.close();
		return map;
	} 
}
